package com.example.online_bank.domain.model;import com.example.online_bank.domain.entity.User;import lombok.AllArgsConstructor;import org.springframework.security.core.GrantedAuthority;import org.springframework.security.core.authority.SimpleGrantedAuthority;import org.springframework.security.core.userdetails.UserDetails;import java.util.Collection;import java.util.List;@AllArgsConstructorpublic class CustomUserDetails implements UserDetails {    private final User user;    @Override    public Collection<? extends GrantedAuthority> getAuthorities() {        return user.getRoles().stream()                .map(role -> new SimpleGrantedAuthority(role.getName()))                .toList();    }    @Override    public String getPassword() {        return user.getPasswordHash();    }    @Override    public String getUsername() {        return user.getName();    }    /**     * @return     */    @Override    public boolean isAccountNonExpired() {        return true;    }    /**     * @return     */    @Override    public boolean isAccountNonLocked() {        return true;    }    /**     * @return     */    @Override    public boolean isCredentialsNonExpired() {        return true;    }    /**     * @return     */    @Override    public boolean isEnabled() {        return true;    }}